import argparse


def lth_args_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument("--lr",                type=float, default=0.001,    help="Learning rate")
    parser.add_argument("--batch_size",        type=int,   default=64,      help="Batch size")
    parser.add_argument("--lth_epoch_iters",   type=int,   default=3,       help="LTH epoch iterations")
    parser.add_argument("--dataset",           type=str,   default="cifar10", help="dataset name")
    # parser.add_argument("--arch_type",default="resnet18",type=str,help="architecture type 架构类型")
    parser.add_argument( "--setting",          type=str,   default="",      help="setting name" )
    parser.add_argument("--prune_percent",     type=float, default=25,      help="Pruning percent")
    parser.add_argument("--prune_target",      type=int,   default=80,      help="Pruning target")
    parser.add_argument( "--com_rounds",       type=int,   default=1,       help="rounds of fedavg training")
    parser.add_argument("--la_epochs",         type=int,   default=15,      help="rounds of training for local alt optimization")
    parser.add_argument("--iid",               action="store_true",         help="whether i.i.d or not")
    parser.add_argument("--num_users",         type=int,   default=10,      help="number of users: K")
    parser.add_argument("--shard_per_user",    type=int,   default=2,       help="classes per user")
    parser.add_argument("--local_bs",          type=int,   default=32,      help="local batch size: B")
    parser.add_argument("--frac",              type=float, default=0.1,     help="the fraction of clients: C")
    parser.add_argument("--num_classes",       type=int,   default=10,      help="number of classes")
    parser.add_argument("--model",             type=str,   default="resnet18", help="model name")
    parser.add_argument("--bs",                type=int,   default=128,     help="test batch size")
    parser.add_argument("--lth_freq",          type=int,   default=1,       help="frequency of lth")
    parser.add_argument("--pretrained_init",   action="store_true",         help="pretrained initialization")
    parser.add_argument("--clipgradnorm",      action="store_true",         help="clip gradient norm")
    parser.add_argument("--num_samples",       type=int,   default=-1,      help="number of samples")
    parser.add_argument("--test_size",         type=int,   default=-1,      help="test size")
    parser.add_argument("--exp_name",          type=str,   default="prune_rate_vary", help="experiment name")
    parser.add_argument("--server_data_ratio", type=float, default=0.0,     help="The percentage of data that servers also have across data of all clients.")
    parser.add_argument("--seed",              type=int,   default=1,       help="random seed (default: 1)")
    parser.add_argument("--M",                 type=int,   default=4,     help="The number of parameters in each group.")

    args = parser.parse_args()
    return args
